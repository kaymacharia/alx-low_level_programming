# Makefile for building 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c school.c

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Compilation flags
CFLAGS = -Wall -Wextra -g

# Default target is 'all'
all: $(NAME)

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $^ -o $@

# Rule to compile source files into object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean rule to delete Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ $(NAME)

# Oclean rule to delete object files
oclean:
	$(RM) $(OBJ)

# Fclean rule to delete Emacs and Vim temporary files, the executable, and object files
fclean: clean oclean

# Re rule to force recompilation of all source files
re: fclean all

# Ensure that the clean, oclean, fclean, re rules never fail
.PHONY: all clean oclean fclean re
